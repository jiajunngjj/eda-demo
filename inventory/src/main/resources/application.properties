%dev.quarkus.http.port=9090
%prod.quarkus.http.port=8080

# Configures the AMQP broker credentials.
amqp-username=admin
amqp-password=admin

# local vm
%dev.amqp-host=192.168.0.110
%dev.amqp-port=7672

%prod.amqp-host=amqp-svc.eda-demo.svc.cluster.local
%prod.amqp-port=5671

# Configure the AMQP connector to read from the `new-order` address
%dev.mp.messaging.incoming.order-new.connector=smallrye-amqp
%dev.mp.messaging.incoming.order-new.address=order-new
%dev.mp.messaging.incoming.order-new.durable=true

# Configure the AMQP connector to write to the `new-order` address
%dev.mp.messaging.outgoing.order-in-progress.connector=smallrye-amqp
%dev.mp.messaging.outgoing.order-in-progress.address=order-in-progress
%dev.mp.messaging.outgoing.order-in-progress.durable=true

# Configure the AMQP connector to write to the `order-error` address
%dev.mp.messaging.outgoing.order-error.connector=smallrye-amqp
%dev.mp.messaging.outgoing.order-error.address=order-error
%dev.mp.messaging.outgoing.order-error.durable=true

# Configure the AMQP connector to read from the `order-error` address
%dev.mp.messaging.incoming.order-error-inv.connector=smallrye-amqp
%dev.mp.messaging.incoming.order-error-inv.address=order-error-inv
%dev.mp.messaging.incoming.order-error-inv.durable=true

# prod

# Configure the AMQP connector to read from the `new-order` address
%prod.mp.messaging.incoming.order-new.connector=smallrye-amqp
%prod.mp.messaging.incoming.order-new.address=order-new
%prod.mp.messaging.incoming.order-new.durable=true

# Configure the AMQP connector to write to the `new-order` address
%prod.mp.messaging.outgoing.order-in-progress.connector=smallrye-amqp
%prod.mp.messaging.outgoing.order-in-progress.address=order-in-progress
%prod.mp.messaging.outgoing.order-in-progress.durable=true

# Configure the AMQP connector to write to the `order-error` address
%prod.mp.messaging.outgoing.order-error.connector=smallrye-amqp
%prod.mp.messaging.outgoing.order-error.address=order-error
%prod.mp.messaging.outgoing.order-error.durable=true

# Configure the AMQP connector to read from the `order-error` address
%prod.mp.messaging.incoming.order-error-inv.connector=smallrye-amqp
%prod.mp.messaging.incoming.order-error-inv.address=order-error-inv
%prod.mp.messaging.incoming.order-error-inv.durable=true


# for testing
app.error.inventory.id=f0001

# configure the MongoDB client for a replica set of two nodes
%dev.quarkus.mongodb.connection-string = mongodb://192.168.0.110:27017
# mandatory if you don't specify the name of the database using @MongoEntity
%dev.quarkus.mongodb.database = inventory

%prod.quarkus.mongodb.connection-string = mongodb://admin:admin@mongodb.eda-demo.svc.cluster.local:27017
# mandatory if you don't specify the name of the database using @MongoEntity
%prod.quarkus.mongodb.database = order
#mongodb://[username:password@]host1[:port1][,host2[:port2],…​[,hostN[:portN]]]

%prod.quarkus.vertx.event-loops-pool-size=20
%prod.quarkus.vertx.max-event-loop-execute-time=PT5S
%prod.quarkus.vertx.warning-exception-time=PT5S


# configure your datasource
#%dev.quarkus.datasource.db-kind = mysql
#%dev.quarkus.datasource.username = demouser
#%dev.quarkus.datasource.password = Passw%0rd
#%dev.quarkus.datasource.jdbc.url = jdbc:mysql://192.168.0.110:3306/demodb

# drop and create the database at startup (use `update` to only update the schema)
#%dev.quarkus.hibernate-orm.database.generation = drop-and-create
